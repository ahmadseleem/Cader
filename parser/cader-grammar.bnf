/**
** S-expressions Parser.
**/


// ===========================
// Lexical grammar (tokens):

%lex

%%

\s+                    /* skip whitespace */

\"[^\"]*\"            return 'STRING'

\d+                   return 'NUMBER' 

[\w\-+*<>/]+          return 'SYMBOL'


/lex

// ===========================
// Syntactic grammar (BNF):

%%

Exp
    : Atom
    | List
    ;

Atom
    : NUMBER  { $$ = Number($1) }
    | STRING
    | SYMBOL
    ;

